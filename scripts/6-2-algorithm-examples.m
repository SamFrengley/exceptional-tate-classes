AttachSpec("../Galois-Frob-Polys/src/spec");
AttachSpec("../src/spec");

// SetVerbose("Weil", 2);
SetVerbose("Weil", 0);

QQ := Rationals();
R<x> := PolynomialRing(QQ);

// Example 1
f := x^6 - 5*x^5 + 33*x^4 - 99*x^3 + 363*x^2 - 605*x + 1331;
K := NumberField(f);

w := [0,1/2,1/2,1/2,1/2,1];

ply, q := wprToWeilPolynomial(w, K, 11); 
printf "The field K is generated by the min poly with q=%o\n"
       cat "    %o\n"
       cat "The newton slopes are\n  %o\n expected\n  %o\n", 
       q, R!ply, NewtonSlopes(ply, q), w;

// Example 2
f := x^6 - 4*x^5 + 9*x^4 - 15*x^3 + 18*x^2 - 16*x + 8;
K := NumberField(f);

w := [0,1/2,1/2,1/2,1/2,1];

try 
  ply, q := wprToWeilPolynomial(w, K, 29); 
catch e
  printf "\nExpect a runtime error like:\n"
         cat "%o\n"
         cat "since no subgroups are p-admissible\n\n", e;
end try;

try 
  ply, q := wprToWeilPolynomial(w, K, 29); 
catch e
  printf "\nExpect a runtime error like:\n"
         cat "%o\n"
         cat "since no subgroups are p-admissible\n\n", e;
end try;

w := [0,0,0,1,1,1];
ply, q := wprToWeilPolynomial(w, K, 2); 
printf "The field K is generated by the min poly with q=%o\n"
       cat "    %o\n"
       cat "The newton slopes are\n  %o\n expected\n  %o\n", 
       q, R!ply, NewtonSlopes(ply, q), w;


// Example 3
f := x^6 - 3*x^5 + 6*x^4 - 9*x^3 + 12*x^2 - 12*x + 8;
K := NumberField(f);

w := [0,0,0,1,1,1];
ply, q := wprToWeilPolynomial(w, K, 3); 
printf "The field K is generated by the min poly with q=%o\n"
       cat "    %o\n"
       cat "The newton slopes are\n  %o\n expected\n  %o\n", 
       q, R!ply, NewtonSlopes(ply, q), w;

w := [0,1/2,1/2,1/2,1/2,1];
try 
  ply, q := wprToWeilPolynomial(w, K, 3); 
catch e
  printf "\nExpect a runtime error like:\n"
         cat "%o\n"
         cat "since no subgroups are p-admissible\n\n", e;
end try;

w := [0,0,0,1,1,1]
printf "The field K is generated by the min poly with q=%o\n"
       cat "    %o\n"
       cat "The newton slopes are\n  %o\n expected\n  %o\n", 
       q, R!ply, NewtonSlopes(ply, q), w;
